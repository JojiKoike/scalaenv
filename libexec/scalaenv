#!/usr/bin/env bash

#
# http://www.gnu.org/software/bash/manual/bashref.html#The-Set-Builtin
set -e

# delete $CDPATH with value
export -n CDPATH

# is debug mode?
if [ "${1}" = "--debug" ]; then
  export SCALAENV_DEBUG=1
  shift
fi

# set debug PS4 prompt
if [ -n "${SCALAENV_DEBUG}" ]; then
  export PS4='+ [${BASH_SOURCE##*/}:${LINENO}] '
  set -x
fi

READLINK=$(type -p greadlink readlink | head -1)
if [ -z "${READLINK}" ]; then
  echo "scalaenv: connot find readlink - are you missing GNU coreutils?" >& 2
  exit 1
fi

abort() {
  { if [ "$#" -eq 0 ]; then cat -
    else echo "scalaenv: $*"
    fi
  } >&2
  exit 1
}

resolve_link() {
  ${READLINK} "${1}"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="${1}"
  
  while [ -n "${path}" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "${name}" || true)"
  done

  pwd
  cd "${cwd}"
}

# set scalaenv rootdir
if [ -z "${SCALAENV_ROOT}" ]; then
  SCALAENV_ROOT="${HOME}/.scalaenv"
else
  SCALAENV_ROOT="${SCALAENV_ROOT%/}"
fi
export SCALAENV_ROOT

# set working directory
if [ -z "${SCALAENV_DIR}" ]; then
  SCALAENV_DIR="$(pwd)"
else
  cd "${SCALAENV_DIR}" 2> /dev/null || {
    echo "scalaenv: connot change working directory to \"${SCALAENV_DIR}\""
    exit 1
  } >& 2
  SCALAENV_DIR="$(pwd)"
  cd "${OLDPWD}"
fi
export SCALAENV_DIR

# enable nullglob
shopt -s nullglob

# export PATH
bin_path="$(abs_dirname "${0}")"
for plugin_bin in "${SCALAENV_ROOT}/plugins/"*/bin; do
  bin_path="${bin_path}:${plugin_bin}"
done
export PATH="${bin_path}:${PATH}"

# export hook path
hook_path="${SCALAENV_HOOK_PATH}:${SCALAENV_ROOT}/scalaenv.d:/usr/local/etc/scalaenv.d:/etn/scalaenv.d:/usr/lib/scalaenv/hooks"
for plugin_hook in "${SCALAENV_ROOT}/plugins/"*/etc/scalaenv.d; do
  hook_path="${hook_path}:${plugin_hook}"
done
export SCALAENV_HOOK_PATH="${hook_path}"

# disable nullglob
shopt -u nullglob

command="${1}"
case "${command}" in
  "" )
    { scalaenv---version
      scalaenv-help
    } | abort
    ;;
  "-h" | "--help" )
    exec scalaenv-help
    ;;
  "-v" | "--version" )
    exec scalaenv---version
    ;;
  * )
    command_path="$(command -v "scalaenv-${command}" || true)"
    [ -n "$command_path" ] || abort "no such command \`$command\`"

    shift 1
    if [ "$1" = --help ]; then
      if [[ "$command" == "sh-"* ]]; then
        echo "scalaenv help \"$command\""
      else
        exec scalaenv-help "$command"
      fi
    else
      exec "$command_path" "$@"
    fi
    ;;
esac

